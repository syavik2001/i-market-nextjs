"use client";
import { useEffect, useRef } from "react";
import { useSearchParams } from "next/navigation";
import toast from "react-hot-toast";

export default function HomeClientToast() {
	const searchParams = useSearchParams();
	const shownRef = useRef(false);

	// –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ localStorage (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
	if (typeof window !== "undefined") {
		(window as any).clearPaidToast = () => {
			window.localStorage.removeItem("paid-toast-shown");
			console.log("üßπ Toast client: localStorage cleared");
		};
	}

	useEffect(() => {
		const paid = searchParams.get("paid");
		console.log("üîç Toast client: paid parameter =", paid);

		if (!paid) {
			console.log("üîç Toast client: no paid parameter, exiting");
			return;
		}

		if (shownRef.current) {
			console.log("üîç Toast client: already shown in this render");
			return;
		}

		shownRef.current = true;

		if (paid === "success") {
			console.log("üéâ Toast client: showing success toast");
			toast.success("–û–ø–ª–∞—Ç–∞ —É—Å–ø—ñ—à–Ω–∞! –î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.", {
				duration: 4000,
				icon: "‚úÖ",
			});
		}
		if (paid === "fail") {
			console.log("‚ùå Toast client: showing fail toast");
			toast.error("–û–ø–ª–∞—Ç–∞ –Ω–µ –≤–¥–∞–ª–∞—Å—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.", {
				duration: 4000,
				icon: "‚ùå",
			});
		}

		// –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
		const params = new URLSearchParams(window.location.search);
		params.delete("paid");
		const newUrl = window.location.pathname + (params.toString() ? `?${params.toString()}` : "");
		window.history.replaceState({}, "", newUrl);
	}, [searchParams]);

	return null;
}
